@use "./Profile" as ps;

//
@layer u2-normalize {

    //
    @layer ux-agate;

    //
    @media screen {

        //
        :where(html, body) {
            //
            & {
                padding: 0px;
                margin: 0px;
                inset: 0px;
                border: none 0px transparent;
                background-color: transparent;
            }

            //
            & { @include ps.HQRendering(); };
        }

        //
        :where(*), ::slotted(*) {
            transition-behavior: allow-discrete;
            interpolate-size: allow-keywords;
            box-sizing: border-box;
        }

        //
        ui-frame, ui-modal, .ui-grid-item
        {
            isolation: isolate;
            content-visibility: auto;
            transform-origin: 50% 50%;
            transform: 
                translate3d(
                    round(nearest, var(--translate-x, 0%), calc(1px / var(--pixel-ratio, 1))), 
                    round(nearest, var(--translate-y, 0%), calc(1px / var(--pixel-ratio, 1)))
                    , 0) 
                scale3d(var(--scale, 1), var(--scale, 1), var(--scale, 1));
            translate: 0% 0% 0%;
            opacity: var(--opacity, 1);
            rotate: 0deg;
            scale: 1;

            //
            --opacity: 1;
            --scale: 1;
            --rotate: 0deg;
            --translate-x: 0%;
            --translate-y: 0%;
        }

        //
        ui-icon {
            content-visibility: hidden;
        }

        //
        body, html, canvas, img, #markdown, #viewport {
            content-visibility: auto;
        }

        //
        #markdown * {
            content-visibility: auto;
        }

        //
        :root, :where(html) {
            translate: 0px 0px !important;
            transform: none !important;
            margin: 0px !important;
            padding: 0px !important;
            border: none 0px transparent !important;
            outline: none 0px transparent !important;

            //
            background-color: transparent;
            container-type: normal;
            container-name: html root;
            contain: none;
            overflow: visible;
            position: fixed;
            inset: 0px;
            inset-block-end: auto;

            //
            min-inline-size: 100dvi;
            min-block-size: 100dvb;

            //
            inline-size: max-content;
            block-size: max-content;

            //
            max-inline-size: none;
            max-block-size: none;

            //
            place-content: start;
            place-items: start;
            place-self: start;

            //
            line-height: 0;
            flex-direction: column;
            display: flex;
        }

        //
        :root, :host, :scope, :where(body) {
            pointer-events: auto;

            //
            transition-behavior: allow-discrete;
            interpolate-size: allow-keywords;
            content-visibility: auto;

            //
            --keyboard-inset-bottom: calc(max(env(keyboard-inset-bottom, 0px), 0px) / max(var(--zoom, 1), 0.125));
            --keyboard-inset-height: calc(max(env(keyboard-inset-height, 0px), 0px) / max(var(--zoom, 1), 0.125));
        }

        //
        :where(:root, body, html, button) {
            font-family: 'Open Sans', 'Gill Sans Nova', Ubuntu, 'DejaVu Sans', Candara, Segoe, "Segoe UI", Optima, source-sans-pro, sans-serif;
            //@include dFont.applyFont(0.9rem);
        }

        //
        :where(body) {

            //
            & {
                translate: 0px 0px !important;
                transform: none !important;
                margin: 0px !important;

                //
                font-size: 0.9rem;

                //
                overflow: visible;
                position: relative;
                pointer-events: auto;
                inset: 0px;

                //
                display: inline flex;
                place-content: start;
                place-items: start;
                place-self: start;

                //
                background-color: var(--theme-base-color, transparent);

                // if needs viewport
                container-name: body;
                container-type: normal;
                contain: none;

                //
                min-inline-size: 100dvi;
                min-block-size: 100dvb;

                //
                inline-size: 100%;
                block-size: 100%;
            }

            //
            & > :where(*) {
                display: grid;
                place-self: safe center;
                grid-column: 1 / 1 span;
                grid-row: 1 / 1 span;
            }
        }

        //
        :host, :scope, :root {

            //
            :where(*) {
                touch-action: none;

                //
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: none;
                -o-user-select: none;
                -ms-user-select: none;
                user-select: none;

                //
                -webkit-tap-highlight-color: transparent;
                -moz-tap-highlight-color: transparent;
            }

            //
            :where(button, input, form) {
                border: none;
                outline: none;
            }

            //
            :where(img, picture, span, a, button, input, svg, video, canvas) {
                touch-action: none;
                -webkit-user-drag: none;
                -khtml-user-drag: none;
                -moz-user-drag: none;
                -o-user-drag: none;
                -ms-user-drag: none;
                user-drag: none;
            }

            //
            :where(ui-icon, svg) {
                @include ps.disable-transform();
            }

            //
            :where(canvas, img, picture, video) {
                user-select: none;
                pointer-events: none;
                overflow: hidden;
            }

            //
            :where(picture) {
                display: contents;
            }

            //
            :dir(rtl) :where(*), :where(*):dir(rtl) {
                direction: rtl;
            }

            //
            :dir(ltr) :where(*), :where(*):dir(ltr) {
                direction: ltr;
            }

            //
            :where(.lucide, svg) {

                //
                & {
                    inline-size: max-content;
                    block-size: 100%;
                    aspect-ratio: 1 / 1;

                    //
                    container-type: normal;
                    contain: none;

                    //
                    transform: none;
                    translate: 0px 0px;

                    //
                    object-fit: contain;
                    object-position: center center;
                    place-items: center;
                    place-content: center;

                    //
                    filter: none;
                    backdrop-filter: none;

                    //
                    stroke: var(--current-glyph-color, currentColor);
                }

                & {
                    interactivity: inert;
                    pointer-events: none;
                    user-select: none;
                    touch-action: none;
                }

                //
                //& { @include ps.HQRendering(); };
                & { @include ps.LQRendering(); };
            }

            //
            :where(ui-icon, label, form) {
                @include ps.LQRendering();
            }

            //
            :where([inert], *[inert]) {
                pointer-events: none !important;
                user-select: none !important;
                touch-action: none !important;
            }

            //
            @media (prefers-reduced-motion: reduce) {
                :where(*),
                ::after,
                ::before {
                    animation-delay: -1ms !important;
                    animation-duration: 1ms !important;
                    animation-iteration-count: 1 !important;
                    background-attachment: initial !important;
                    scroll-behavior: auto !important;
                    transition-delay: 0s !important;
                    transition-duration: 0s !important;
                }
            }

            //
            :where(button) {
                display: flex;
                place-items: center;
                place-content: center;

                //
                color: var(--current-glyph-color);
                background-color: var(--current-surface-color);

                //
                cursor: pointer;
                pointer-events: auto;

                //
                padding: 0px;
                margin: 0px;

                //
                border: none 0px transparent;
                outline: none 0px transparent;

                //
                line-height: 0px;
            }

            //
            :where(a, span) {
                text-decoration: none;
                background-color: transparent;
                place-content: center;
                place-items: center;
                justify-content: start;
            }

            // relative by default
            :where(label) { position: relative; }
            :where(body) :where(div, label) {
                display: inline flex;
                flex-direction: row;
                flex-wrap: wrap;
                box-sizing: border-box;

                //
                container-type: normal;
                contain: none;

                //
                place-items: center;
                place-content: center;

                //
                min-inline-size: 0px;
                min-block-size: 0px;
                inline-size: max-content;
                block-size: max-content;
                max-inline-size: none;
                max-block-size: none;

                //
                gap: 0px;
                padding: 0px;
                margin: 0px;

                //
                inset: var(--cs-inset-y, 0px) auto auto var(--cs-inset-x, 0px);
            }

            //
            :where(.space, flex-space) {
                flex-grow: 1;
                flex-shrink: 0;
            }

            //
            :where(.break, flex-break, br) {
                flex-basis: 100%;
                flex-grow: 1;
                flex-shrink: 0;
            }

            // weird idea...
            label > input:where([type="radio"], [type="checkbox"]) {
                display: none;
                pointer-events: none;
            }

            // able to select inputs when edit
            :where(input[type="text"], input[type="number"]) {
                user-select: auto;
            }

        }

        //
        :where(head, script, style, link, meta) {
            display: none !important;
            user-select: none !important;
            pointer-events: none !important;
        }

    };

    // can be printed itself
    [data-print] {
        *, *::before, *::after {
            box-sizing: border-box;
            white-space: normal;
        }

        body {
            line-height: 1.5;
            -webkit-font-smoothing: antialiased;
        }

        img, picture, video, canvas, svg {
            display: block;
            max-width: 100%;
        }

        input, button, textarea, select {
            font: inherit;
        }

        p, h1, h2, h3, h4, h5, h6 {
            overflow-wrap: break-word;
        }

        p {
            text-indent: 1em;
            text-wrap: pretty;
        }

        h1, h2, h3, h4, h5, h6 {
            text-wrap: balance;
        }

        #root, #__next {
            isolation: isolate;
        }

        p, ol, ul {
            block-size: max-content;
            display: block;
        }

        //
        & {
            white-space: normal;
            text-align: justify;
            font-family: "Times New Roman";
            overflow: auto;
            font-family: 10pt;
        };

        //
        p { font-family: 10pt; }
        p { white-space: pre-line; };

        //
        strong {
            display: inline;
            white-space: normal;
            font-weight: bold;
        }

        //
        h1, h2, h3, h4, h5, h6 {
            display: block;
            flex-direction: row;
        }

        //
        :where(ol, ul) {
            list-style-position: inside;
            margin: 0px;
            padding: 0px;
            margin-inline-start: 0.5em;
        }

        //
        :where(ol, ul) :where(ol, ul) {
            padding-inline-start: 1em;
            margin: 0px;
            margin-block: 0.5rem;
        }

        //
        ol, ul, li {
            text-indent: 1em;
        }

        //
        p {
            margin-block: 0.5rem;
        }

        //
        li {
            padding: 0px;
            white-space: normal;
            list-style-position: inside;
            margin-bottom: 0.25rem;
            text-align: start;
            
            //
            p {
                display: inline;
                list-style-position: inside;
                white-space: normal;
            }

            //
            &::marker {
                display: inline;
                white-space: nowrap;
            }
        }

        //
        table, li, p, blockquote, ol, ul { break-inside: avoid-page; };
        h1, h2, h3, h4, h5, h6, blockquote { break-before: auto; break-inside: avoid-page; break-after: avoid-page; };

        //
        :not(h1, h2, h3, h4, h5, h6) + :where(ul, ol, li) { break-before: avoid-page; };

        // avoid breaking page, except any another <p> element
        p:has(strong) { break-after: avoid-page; break-before: avoid-page; };
        p + :not(p) { break-before: avoid-page; };
        p:has(+ :not(p, h1, h2, h3, h4, h5, h6)) { break-after: avoid-page; };

        strong { break-inside: avoid-page; break-before: avoid-page; break-after: avoid-page; };

        //
        .pb, .np, .pagebreak, .newpage, .page-break, .new-page { border: none 0px transparent; background-color: transparent; page-break-after: always; break-after: page; };

        //
        h1, h2, h3, h4, h5, h6 {
            border: none 0px transparent;
            font-family: "Times New Roman", serif;
            font-weight: bold;
            margin: 1em 0;
            text-align: start;
        }

        //
        :where(ol, ul, li) + p {
            break-before: avoid-page;
        }

        //
        h1 {
            text-align: center;
        }

        //
        h1, h2 {
            border-bottom: 1px solid #0004;
            padding-bottom: 0.25em;
            margin-bottom: 1em;
            inline-size: 100%;
        }

        //
        h2 { border-bottom: 1px solid #0003; }

        //
        :not(h1) + h2 {
            break-before: page;
            //border-bottom: 1px solid #0003;
        }

        //
        /*h1 + h2 {
            border-bottom: 0px none transparent;
        }*/

        //
        h3, h4, h5, h6 {
            inline-size: max-content;
        }

        //
        h1 { font-size: 2em; };
        h2 { font-size: 1.6em; };
        h3 { font-size: 1.2em; border-bottom: 1px solid #0003; padding-block-end: 0.25em; margin-block-end: 1rem; };
        h4 { font-size: 1.05em; };
        h5 { font-size: 1em; };
        h6 { font-size: 1em; };

        //
        hr {
            display: block;
            block-size: 1px;
            background-color: #0004;
            border-bottom: none 0px transparent;
            margin: 0px 1em;
        }

        //
        img {
            color: transparent;
            font-size: 0px;
            line-height: 0;
        }

        //
        img:not([src]), img[src=""], img.error {
            display: none;
            visibility: collapse;
            content-visibility: hidden;
        }

        //
        div.hide, span.hide {
            display: none;;
            visibility: collapse;
            content: "\[...\]";
            break-inside: avoid-page;
            //display: inline;
        }

        blockquote {
            border-inline-start: solid 0.25em oklch(from var(--rv-color, #000) l c h / 0.1);
            padding-inline-start: 0.5em;
            margin-inline: 0px;
        }

        table {
            inline-size: 100%;
            border-collapse: collapse;
            border: solid 1px oklch(from var(--rv-color, #000) l c h / 0.1);

            thead, tfoot, tbody, th, td, tr {
                padding: 0.25em;
                border: solid 1px oklch(from var(--rv-color, #000) l c h / 0.1);
            }
        }
    }

    //
    @media print {

        // any where not printable, not printable any children...
        // and assume until any printable
        @scope (:where(body, :host) :not([data-print])) to (:has(> [data-print])) {
            :scope > :where(div, img, canvas, :not(:defined)):not([data-print]):not([data-print-pass]) 
                { display: none !important; visibility: collapse !important; };
        }

        //
        li, ul, ol {
            text-align: start;
        }

        //
        blockquote {
            border-inline-start: solid 0.25em #0004;
        }

        //
        table {
            border: solid 1px #0004;

            thead, tfoot, tbody, th, td, tr {
                border: solid 1px #0004;
            }
        }

        //
        hr {
            border: none 0px transparent;
            background-color: transparent;
        }

        //
        body {
            margin: 0px;
            padding: 0px;
            overflow: auto;
        }

        //
        *:not(:defined), style, script, link {
            display: none !important; visibility: collapse !important;
        }

        // if can be passed for print
        [data-print-pass] {
            display: contents !important;
            visibility: visible;
        }

        //
        @page {
            size: A4;
            margin: 10mm 16mm 10mm 16mm;

            //
            @bottom-center {
                content: counter(page);
            }
        }
    };

};
